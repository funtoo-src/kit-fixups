# Distributed under the terms of the GNU General Public License v2

EAPI=7


CMAKE_ECLASS=cmake
PYTHON_COMPAT=( python3+ )
inherit cmake python-any-r1

DESCRIPTION="{{desc}}"
HOMEPAGE="{{homepage}}"
SRC_URI="{{src_uri}}"
LICENSE="{{license}}"

S="${WORKDIR}/{{github_user}}-{{github_repo}}-{{sha[:7]}}"

SLOT="0/$(ver_cut 1-2)"
KEYWORDS="*"
IUSE="+bmff doc examples nls +png test webready +xmp"
RESTRICT="!test? ( test )"

BDEPEND="
	doc? (
		${PYTHON_DEPS}
		app-doc/doxygen
		dev-libs/libxslt
		media-gfx/graphviz
		virtual/pkgconfig
	)
	nls? ( sys-devel/gettext )
	dev-libs/inih
"
RDEPEND="
    >=virtual/libiconv-0-r1
	nls? ( >=virtual/libintl-0-r1 )
	png? ( sys-libs/zlib )
	webready? (
		>net-libs/libssh-0.9.1[sftp]
		net-misc/curl
	)
	xmp? ( dev-libs/expat )
"
DEPEND="${DEPEND}
	test? ( dev-cpp/gtest )"

DOCS=( README.md doc/ChangeLog doc/cmd.txt )

pkg_setup() {
	use doc && python-any-r1_pkg_setup
}

src_prepare() {
	# FIXME @upstream:
	einfo "Converting doc/cmd.txt to UTF-8"
	iconv -f LATIN1 -t UTF-8 doc/cmd.txt > doc/cmd.txt.tmp || die
	mv -f doc/cmd.txt.tmp doc/cmd.txt || die

	cmake_src_prepare

	sed -e "/^include.*compilerFlags/s/^/#DONT /" -i CMakeLists.txt || die
}

src_configure() {
	local mycmakeargs=(
		-DCMAKE_CXX_STANDARD=14
		-DEXIV2_BUILD_SAMPLES=NO
		-DEXIV2_ENABLE_NLS=$(usex nls)
		-DEXIV2_ENABLE_PNG=$(usex png)
		-DEXIV2_ENABLE_CURL=$(usex webready)
		-DEXIV2_ENABLE_WEBREADY=$(usex webready)
		-DEXIV2_ENABLE_XMP=$(usex xmp)
		-DEXIV2_ENABLE_BMFF=$(usex bmff)
		$(echo -DEXIV2_BUILD_EXIV2_COMMAND=NO)
		$(echo -DEXIV2_BUILD_DOC=$(usex doc))
		$(echo -DEXIV2_BUILD_UNIT_TESTS=$(usex test))
		-DCMAKE_INSTALL_DOCDIR="${EPREFIX}"/usr/share/doc/${PF}/html
	)

	cmake_src_configure
}

src_compile() {
	cmake_src_compile

	use doc && eninja doc
}

src_test() {
	cd "${BUILD_DIR}"/bin || die
	./unit_tests || die "Failed to run tests"
}

src_install() {
    cmake_src_install

	use xmp && DOCS+=( doc/{COPYING-XMPSDK,README-XMP,cmdxmp.txt} )

	einstalldocs
	find "${D}" -name '*.la' -delete || die

	if use examples; then
		docinto examples
		dodoc samples/*.cpp
	fi
}
